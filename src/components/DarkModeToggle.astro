---
const { class: extraClass } = Astro.props;
---

<button class={`dark-mode-toggle ${extraClass ?? ''}`} id="dark-mode-toggle">
  <!-- Moon icon -->
  <svg class="icon moon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
    <path d="M21 12.79A9 9 0 1111.21 3a7 7 0 009.79 9.79z"/>
  </svg>

  <!-- Sun icon -->
  <svg class="icon sun" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
    <circle cx="12" cy="12" r="5"/>
    <line x1="12" y1="1" x2="12" y2="3"/>
    <line x1="12" y1="21" x2="12" y2="23"/>
    <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"/>
    <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"/>
    <line x1="1" y1="12" x2="3" y2="12"/>
    <line x1="21" y1="12" x2="23" y2="12"/>
    <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"/>
    <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"/>
  </svg>
</button>

<style>
.dark-mode-toggle {
  position: fixed;
  top: 16px;
  right: 16px;
  z-index: 2000;
  width: 44px;
  height: 44px;
  border: none;
  border-radius: 12px;
  background-color: var(--color-3);
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: background 0.3s ease;
}

.dark-mode-toggle:hover {
  background-color: var(--color-2);
}

.icon {
  width: 24px;
  height: 24px;
  stroke: var(--text-main);
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  transition: opacity 0.4s ease, transform 0.4s ease;
  pointer-events: none;
}

.moon {
  opacity: 1;
}

.sun {
  opacity: 0;
}
</style>

<script type="module" client:load>
const toggle = document.getElementById('dark-mode-toggle');
const root = document.documentElement;
const moon = toggle.querySelector('.moon');
const sun = toggle.querySelector('.sun');

// Load saved theme from localStorage
const savedTheme = localStorage.getItem('darkMode');
if (savedTheme === 'enabled') {
  root.classList.add('dark-mode');
  moon.style.opacity = '0';
  moon.style.transform = 'translate(-50%, -50%) rotate(90deg)';
  sun.style.opacity = '1';
  sun.style.transform = 'translate(-50%, -50%) rotate(0deg)';
} else {
  moon.style.opacity = '1';
  moon.style.transform = 'translate(-50%, -50%) rotate(0deg)';
  sun.style.opacity = '0';
  sun.style.transform = 'translate(-50%, -50%) rotate(-90deg)';
}

// Toggle dark mode
toggle.addEventListener('click', () => {
  const isDark = root.classList.toggle('dark-mode');

  if (isDark) {
    localStorage.setItem('darkMode', 'enabled');
    // Moon fades out and rotates
    moon.style.opacity = '0';
    moon.style.transform = 'translate(-50%, -50%) rotate(90deg)';
    // Sun fades in
    sun.style.opacity = '1';
    sun.style.transform = 'translate(-50%, -50%) rotate(0deg)';
  } else {
    localStorage.setItem('darkMode', 'disabled');
    // Sun fades out and rotates
    sun.style.opacity = '0';
    sun.style.transform = 'translate(-50%, -50%) rotate(-90deg)';
    // Moon fades in
    moon.style.opacity = '1';
    moon.style.transform = 'translate(-50%, -50%) rotate(0deg)';
  }
});
</script>
